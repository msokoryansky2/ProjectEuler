package mike.sokoryansky.MathUtils

/**
  * Generating function is from https://en.wikipedia.org/wiki/Partition_(number_theory)#Generating_function
  *
  * Namely: p(n) = p(n – 1)  + p(n – 2) – p(n – 5) – p(n – 7) + p(n – 12) + p(n – 15) – p(n – 22)...
  * where p(0) = 1 and p(n) = 0 for n < 0. The constants 1, 2, 5, 7, 12, 15, 22... are pentagonal numbers
  * generated by alternating positive and negative indices: p5(1) == 1, p5(-1) == 2, p5(2) == 5, p5(-2) == 7, etc.
  * The signs in the series follow the pattern: + + - - + + - - + + - - ...
  */
object Partition {
  def partition(n: Int): BigInt = {
    def pentagonals = PolygonalNumber(5)
    ???
  }
}
