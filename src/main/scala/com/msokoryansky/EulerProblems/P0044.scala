package com.msokoryansky.EulerProblems

import com.msokoryansky.MathUtils.PolygonalNumber5

/*

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

 */

class P0044 extends EulerProblem {
  def run: String = {
    val firstPair =
      PolygonalNumber5.firstPentagonalPairWithProperty(1, PolygonalNumber5.propertyPentagonalSumAndDiff)
    val firstDistance = PolygonalNumber5.distanceBetweenPentagonalNumbers(firstPair._1, firstPair._2)
    val lastPossibleIndex = PolygonalNumber5.firstRemotePentagonalNumber(firstDistance)
    val finalPair = PolygonalNumber5.allPentagonalPairsWithinDistanceWithProperty(1, lastPossibleIndex, firstDistance,
                    PolygonalNumber5.propertyPentagonalSumAndDiff)
                    .minBy(p => PolygonalNumber5.distanceBetweenPentagonalNumbers(p._1, p._2))
    PolygonalNumber5.distanceBetweenPentagonalNumbers(finalPair._1, finalPair._2).toString
  }
}

object P0044 extends App {
  (new P0044).printAnswer()
}
